{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/details/details.component.css","webpack:///./src/app/details/details.component.html","webpack:///./src/app/details/details.component.ts","webpack:///./src/app/edit/edit.component.css","webpack:///./src/app/edit/edit.component.html","webpack:///./src/app/edit/edit.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/app/new/new.component.css","webpack:///./src/app/new/new.component.html","webpack:///./src/app/new/new.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { DetailsComponent } from './details/details.component';\n\n\nconst routes: Routes = [\n  {path : '', redirectTo : 'pets', pathMatch : 'full'},\n  {path : 'pets', component : HomeComponent, pathMatch : 'full'},\n  {path : 'pets/new', component : NewComponent},\n  {path : 'pets/:id/edit', component : EditComponent },\n  {path : 'pets/:id', component : DetailsComponent}\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<head>\\n  <!-- materialize links here! look at main page  -->\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0-rc.2/css/materialize.min.css\\\">\\n\\n  <style>\\n    .cont{\\n      padding:10px 50px 50px 50px;\\n    }\\n\\n    nav ul {\\n      padding-right: 50px;\\n    }\\n\\n    nav .brand-logo{\\n      padding-left : 50px;\\n    }\\n\\n  </style>\\n\\n</head>\\n<body>\\n\\n  <nav>\\n      <div class=\\\"nav-wrapper\\\">\\n        <a class=\\\"brand-logo\\\"> Exam!</a>\\n        <ul id=\\\"nav-mobile\\\" class=\\\"right hide-on-med-and-down\\\">\\n            <li><a [routerLink]=\\\"['pets/new']\\\">Add Pet to Shelter</a></li>\\n          <li><a [routerLink]=\\\"['']\\\">Home</a></li>\\n        </ul>\\n      </div>\\n    </nav>\\n    <div class=\\\"cont\\\">\\n      <h1>Pet Shelter</h1>\\n        <router-outlet></router-outlet>\\n    </div>\\n</body>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpService } from './http.service';\nimport { Router, ActivatedRoute, Params} from '../../node_modules/@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { NewComponent } from './new/new.component';\nimport { EditComponent } from './edit/edit.component';\nimport { DetailsComponent } from './details/details.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NewComponent,\n    EditComponent,\n    DetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  providers: [\n    HttpService,\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"\\n<style>\\n  button { margin-right:10px; }\\n</style>\\n\\n<h5>Details about {{ pet.name }}</h5>\\n\\n<strong>Pet type</strong> {{ pet.petType}}\\n\\n<br>\\n\\n<strong>Description : </strong> {{ pet.desc  }}\\n\\n<br>\\n\\n<strong> Likes : </strong>  {{ totalLikes }}\\n\\n\\n<br>\\n\\n\\n  <ul>\\n    <h6>Skills</h6>\\n    <li *ngFor=\\\"let sk of skills\\\" >\\n       <p> <strong> {{ sk }} </strong> </p>\\n    </li>\\n  </ul>\\n\\n\\n  <button class=\\\"add-pet waves-effect waves-light btn\\\" (click)=\\\"adopt()\\\" >Adopt this Pet</button>\\n\\n  <button class=\\\"add-pet waves-effect waves-light btn\\\" [disabled]=\\\"liked==true\\\" (click)=\\\"Like()\\\" >Like this pet</button>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router, ActivatedRoute, Params } from '../../../node_modules/@angular/router';\n\n@Component({\n  selector: 'app-details',\n  templateUrl: './details.component.html',\n  styleUrls: ['./details.component.css']\n})\nexport class DetailsComponent implements OnInit {\n\n  pet : any\n  skills : any\n  liked : any\n  totalLikes : any\n\n  constructor(\n    private _http : HttpService,\n    private _router : Router,\n    private _route : ActivatedRoute\n  ) {\n\n\n    this.liked = false\n\n    this.pet = {\n      name : '',\n      petType : ''\n    }\n\n    this.skills = [ ]\n\n     this._route.params\n     .subscribe((params : Params) => {\n       this._http.getPetById(params['id'])\n        .subscribe(data => {\n          console.log(data)\n          this.pet = data\n          this.totalLikes = this.pet.likes\n          this.skills = [\n            this.pet.skills[0].skill_1,\n            this.pet.skills[0].skill_2,\n            this.pet.skills[0].skill_3\n          ]\n        })\n     })\n\n   }\n\n   adopt(){\n     this._http.deletePetById(this.pet._id)\n      .subscribe(data =>{\n        if('errors' in data){\n            console.log('errors in delete', data)\n        } else {\n          console.log('this was delete', data)\n          this._http.goHome()\n        }\n      })\n   }\n\n   Like(){\n      this.liked = true\n      this.pet.likes += 1\n      this.totalLikes = this.pet.likes\n      this._http.updatePetById(this.pet._id, this.pet)\n        .subscribe(data => {\n          this.pet = data\n        })\n   }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h4>Edit this pet</h4>\\n\\n<style>\\n    .create{\\n      width: 500px;\\n    }\\n    .create a {\\n      margin-right : 10px;\\n    }\\n    .red{\\n      padding:10px;\\n      color: snow;\\n      border-radius: 5px;\\n      border: 1px solid black;\\n      font-weight: bolder;\\n      opacity: .6;\\n    }\\n\\n    .add-pet{\\n      margin-right : 10px;\\n    }\\n\\n  </style>\\n\\n\\n  <div class=\\\"create row\\\">\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"helper-text red\\\" *ngIf=\\\"errors?.name\\\">\\n                {{ errors?.name }}\\n            </div>\\n\\n\\n            <div *ngIf=\\\"Name.invalid && (Name.dirty || Name.touched)\\\"\\n            class=\\\"helper-text red\\\" >\\n\\n               <div *ngIf=\\\"Name.errors.required\\\">\\n                     name is required!\\n               </div>\\n\\n               <div *ngIf=\\\"Name.errors.minlength\\\">\\n                     name must be greater than 4 chars\\n               </div>\\n\\n               <div *ngIf=\\\"Name.errors.name\\\">\\n                  name must be greater must be unique\\n             </div>\\n\\n           </div>\\n\\n\\n            <div class=\\\"input-field\\\">\\n              <input\\n              required\\n              minlength=\\\"3\\\"\\n              type=\\\"text\\\"\\n              class=\\\"validate\\\"\\n              [(ngModel)]=\\\"pet.name\\\"\\n              name=\\\"Name\\\"\\n              #Name=\\\"ngModel\\\">\\n            </div>\\n\\n            <div class=\\\"helper-text red\\\" *ngIf=\\\"errors?.petType\\\">\\n                {{ errors?.petType }}\\n            </div>\\n\\n            <div *ngIf=\\\"petType.invalid && (petType.dirty || petType.touched)\\\" class=\\\"helper-text red\\\" >\\n\\n                    <div *ngIf=\\\"petType.errors.required\\\"> The pet Type is required! </div>\\n\\n                    <div *ngIf=\\\"petType.errors.minlength\\\"> The pet Type  must be greater than 3 chars </div>\\n\\n           </div>\\n\\n            <div class=\\\"input-field\\\">\\n                <input\\n                required\\n                minlength=\\\"3\\\"\\n                placeholder=\\\"Pet type\\\"\\n                [(ngModel)]=\\\"pet.petType\\\"\\n                type=\\\"text\\\"\\n                class=\\\"validate\\\"\\n                name=\\\"petType\\\"\\n                #petType=\\\"ngModel\\\"\\n                >\\n            </div>\\n\\n            <div class=\\\"helper-text red\\\" *ngIf=\\\"errors?.desc\\\">\\n                {{ errors?.desc }}\\n            </div>\\n\\n            <div *ngIf=\\\"desc.invalid && (desc.dirty || desc.touched)\\\" class=\\\"helper-text red\\\" >\\n\\n                <div *ngIf=\\\"desc.errors.required\\\"> The description is required! </div>\\n\\n                <div *ngIf=\\\"desc.errors.minlength\\\"> The description must be greater than 10 chars </div>\\n\\n            </div>\\n\\n            <div class=\\\"input-field\\\">\\n                <input\\n                required\\n                minlength=\\\"10\\\"\\n                [(ngModel)]=\\\"pet.desc\\\"\\n                type=\\\"text\\\"\\n                class=\\\"validate\\\"\\n                name=\\\"desc\\\"\\n                #desc=\\\"ngModel\\\">\\n            </div>\\n\\n            <h5>Skills:</h5>\\n\\n            <div class=\\\"input-field\\\">\\n                <input placeholder=\\\"Skill 1\\\" [(ngModel)]=\\\"pet.skills[0].skill_1\\\" type=\\\"text\\\" class=\\\"validate\\\">\\n            </div>\\n\\n            <div class=\\\"input-field\\\">\\n                <input placeholder=\\\"Skill 2\\\" [(ngModel)]=\\\"pet.skills[0].skill_2\\\" type=\\\"text\\\" class=\\\"validate\\\">\\n            </div>\\n\\n            <div class=\\\"input-field\\\">\\n                <input placeholder=\\\"Skill 3\\\" [(ngModel)]=\\\"pet.skills[0].skill_3\\\" type=\\\"text\\\" class=\\\"validate\\\">\\n            </div>\\n\\n\\n        </div>\\n        <button [disabled]=\\\"(!Name.valid || !petType.valid || !desc.valid)\\\"  class=\\\"add-pet waves-effect waves-light btn\\\"\\n         (click)=\\\"editPet()\\\">Edit Pet</button>\\n        <a class=\\\"waves-effect waves-light btn\\\"\\n        (click)=\\\"goHome()\\\">Cancal</a>\\n      </div>\\n    </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router, ActivatedRoute, Params } from '../../../node_modules/@angular/router';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  pet : any\n  skills : any\n  errors : any\n\n  constructor(\n    private _http : HttpService,\n    private _router : Router,\n    private _route : ActivatedRoute)\n\n    {\n\n    this.pet = {\n      name : '',\n      petType : '',\n      desc : '',\n      skills : [{\n        skill_1 :'',\n        skill_2 :'',\n        skill_3 : ''\n      }]\n  }\n\n    this._route.params\n    .subscribe((params: Params) => {\n       this._http.getPetById(params['id'])\n        .subscribe(data => {\n          this.pet = data\n          console.log(this.pet)\n        })\n    })\n\n   }\n\n  editPet(){\n    this.errors = {}\n    this._http.updatePetById(this.pet._id, this.pet)\n    .subscribe(data => {\n      if('errors' in data){\n          console.log('errors in the data', data)\n          for(let er in data['errors']){\n            this.errors[er] = data['errors'][er]['message']\n         }\n      } else {\n          console.log('success we have updated baby', data)\n         this.goHome()\n      }\n    })\n  }\n\n  goHome(){\n    this._http.goHome()\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<style>\\n  table{\\n    width: 600px;\\n    margin: auto;\\n  }\\n\\n  .add-pet {\\n    margin-right : 15px;\\n  }\\n\\n</style>\\n\\n<p>\\n    These pets are looking for a home\\n</p>\\n\\n<table>\\n    <thead>\\n      <tr>\\n          <th>Name</th>\\n          <th>Type</th>\\n          <th>Actions</th>\\n      </tr>\\n    </thead>\\n\\n    <tbody>\\n      <tr *ngFor=\\\"let pet of pets\\\">\\n        <td>{{ pet?.name}}</td>\\n        <td>{{ pet?.petType}}</td>\\n        <td>\\n            <button  class=\\\"add-pet waves-effect waves-light btn\\\"\\n            (click)=\\\"goDets(pet._id)\\\">Details</button>\\n           <a class=\\\"waves-effect waves-light btn\\\"\\n           (click)=\\\"goEdit(pet._id)\\\">Edit</a>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\nimport { Router } from '../../../node_modules/@angular/router';\nimport * as _ from 'underscore';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  pets : any\n\n  constructor(\n    private _http : HttpService,\n    private _router : Router\n  ) {\n      this._http.pets()\n        .subscribe(data => {\n          let ar = []\n          for(let dt in data){\n            ar.push(data[dt])\n          }\n          console.log(ar)\n          let sorted = ar.sort(this.compare)\n          this.pets = sorted\n        })\n   }\n\n\n   goEdit(id){\n      this._router.navigate(['pets', id, 'edit'])\n   }\n\n   compare(a,b){\n      if(a.petType > b.petType)\n        return 1\n      if(a.petType < b.petType)\n        return -1\n      return 0\n   }\n\n\n\n   goDets(id){\n     this._http.goDetails(id)\n   }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '../../node_modules/@angular/common/http';\nimport { Router, ActivatedRoute, Params } from '../../node_modules/@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  constructor(\n    private _http : HttpClient,\n    private _router : Router\n  ) { }\n\n  goHome(){\n    this._router.navigate([''])\n  }\n\n  goDetails(id){\n    this._router.navigate(['pets', id])\n  }\n\n  pets(){\n    return this._http.get('/api/pets')\n  }\n\n  getPetById(id){\n    return this._http.get('/api/pets/'+id)\n  }\n\n  updatePetById(id, obj){\n    return this._http.patch('/api/pets/'+id, obj)\n  }\n\n  createPet(obj){\n    return this._http.post('/api/pets', obj)\n  }\n\n  deletePetById(id){\n    return this._http.delete('/api/pets/'+id)\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h4>Know of a pet needing a home?</h4>\\n\\n<style>\\n    .create{\\n      width: 500px;\\n    }\\n    .create a {\\n      margin-right : 10px;\\n    }\\n    .red{\\n      padding:10px;\\n      color: snow;\\n      border-radius: 5px;\\n      border: 1px solid black;\\n      font-weight: bolder;\\n      opacity: .6;\\n    }\\n\\n    .add-pet{\\n      margin-right : 10px;\\n    }\\n\\n  </style>\\n\\n\\n  <div class=\\\"create row\\\">\\n      <div class=\\\"col s12\\\">\\n        <div class=\\\"row\\\">\\n\\n            <div class=\\\"helper-text red\\\" *ngIf=\\\"errors?.name\\\">\\n                {{ errors?.name }}\\n            </div>\\n\\n            <div *ngIf=\\\"Name.invalid && (Name.dirty || Name.touched)\\\"\\n            class=\\\"helper-text red\\\" >\\n\\n               <div *ngIf=\\\"Name.errors.required\\\">\\n                     name is required!\\n               </div>\\n\\n               <div *ngIf=\\\"Name.errors.minlength\\\">\\n                     name must be greater than 4 chars\\n               </div>\\n\\n               <div *ngIf=\\\"Name.errors.name\\\">\\n                  name must be greater must be unique\\n             </div>\\n\\n           </div>\\n\\n            <div class=\\\"input-field\\\">\\n              <input\\n              required\\n              minlength=\\\"3\\\"\\n              placeholder=\\\"Pet name\\\"\\n              [(ngModel)]=\\\"pet.name\\\"\\n              type=\\\"text\\\"\\n              class=\\\"validate\\\"\\n              name=\\\"Name\\\"\\n              #Name=\\\"ngModel\\\">\\n            </div>\\n\\n            <div class=\\\"helper-text red\\\" *ngIf=\\\"errors?.petType\\\">\\n                {{ errors?.petType }}\\n            </div>\\n\\n            <div *ngIf=\\\"petType.invalid && (petType.dirty || petType.touched)\\\" class=\\\"helper-text red\\\" >\\n\\n                <div *ngIf=\\\"petType.errors.required\\\"> The pet Type is required! </div>\\n\\n                <div *ngIf=\\\"petType.errors.minlength\\\"> The pet Type  must be greater than 3 chars </div>\\n\\n            </div>\\n\\n            <div class=\\\"input-field\\\">\\n                <input\\n                required\\n                minlength=\\\"3\\\"\\n                placeholder=\\\"Pet type\\\"\\n                [(ngModel)]=\\\"pet.petType\\\"\\n                type=\\\"text\\\"\\n                class=\\\"validate\\\"\\n                name=\\\"petType\\\"\\n                #petType=\\\"ngModel\\\">\\n            </div>\\n\\n            <div class=\\\"helper-text red\\\" *ngIf=\\\"errors?.desc\\\">\\n                {{ errors?.desc }}\\n            </div>\\n\\n            <div *ngIf=\\\"desc.invalid && (desc.dirty || desc.touched)\\\" class=\\\"helper-text red\\\" >\\n\\n                <div *ngIf=\\\"desc.errors.required\\\"> The description is required! </div>\\n\\n                <div *ngIf=\\\"desc.errors.minlength\\\"> The description must be greater than 10 chars </div>\\n\\n            </div>\\n\\n            <div class=\\\"input-field\\\">\\n                <input\\n                required\\n                minlength=\\\"10\\\"\\n                placeholder=\\\"Description\\\"\\n                [(ngModel)]=\\\"pet.desc\\\"\\n                type=\\\"text\\\"\\n                class=\\\"validate\\\"\\n                name=\\\"desc\\\"\\n                #desc=\\\"ngModel\\\">\\n            </div>\\n\\n            <h5>Skills:</h5>\\n\\n            <div class=\\\"input-field\\\">\\n                <input placeholder=\\\"Skill 1\\\" [(ngModel)]=\\\"skills.skill_1\\\" type=\\\"text\\\" class=\\\"validate\\\">\\n            </div>\\n\\n            <div class=\\\"input-field\\\">\\n                <input placeholder=\\\"Skill 2\\\" [(ngModel)]=\\\"skills.skill_2\\\" type=\\\"text\\\" class=\\\"validate\\\">\\n            </div>\\n\\n            <div class=\\\"input-field\\\">\\n                <input placeholder=\\\"Skill 3\\\" [(ngModel)]=\\\"skills.skill_3\\\" type=\\\"text\\\" class=\\\"validate\\\">\\n            </div>\\n\\n\\n        </div>\\n        <button [disabled]=\\\"(!Name.valid || !petType.valid || !desc.valid)\\\"  class=\\\"add-pet waves-effect waves-light btn\\\"\\n         (click)=\\\"addPet()\\\">Add Pet</button>\\n        <a class=\\\"waves-effect waves-light btn\\\"\\n        (click)=\\\"goHome()\\\">Cancal</a>\\n      </div>\\n    </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from '../http.service';\n\n@Component({\n  selector: 'app-new',\n  templateUrl: './new.component.html',\n  styleUrls: ['./new.component.css']\n})\nexport class NewComponent implements OnInit {\n\n  pet : any\n  skills : any\n  errors : any\n\n  constructor(private _http : HttpService) {\n\n    this.pet = {\n        name : '',\n        petType : '',\n        desc : '',\n        skills : {}\n    }\n\n    this.skills = {\n      skill_1 : '',\n      skill_2 : '',\n      skill_3 : ''\n    }\n\n   }\n\n   goHome(){\n      this._http.goHome()\n   }\n\n   reset(){\n    this.pet = {\n      name : '',\n      petType : '',\n      desc : '',\n      skillz : ''\n  }\n\n  this.skills = {\n    skill_1 : '',\n    skill_2 : '',\n    skill_3 : ''\n  }\n   }\n\n   addPet(){\n     this.errors = {}\n     this.pet.skills = this.skills\n     this._http.createPet(this.pet)\n\n      .subscribe(data => {\n        if('errors' in data){\n          console.log('errors in ', data)\n\n          for(let er in data['errors']){\n              this.errors[er] = data['errors'][er]['message']\n          }\n\n        } else {\n          console.log('success in ', data)\n          this.goHome()\n          this.reset()\n        }\n\n      })\n   }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}